//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Aws) DeepCopyInto(out *Aws) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Vpcs != nil {
		in, out := &in.Vpcs, &out.Vpcs
		*out = make(map[string]AwsVpc, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Aws.
func (in *Aws) DeepCopy() *Aws {
	if in == nil {
		return nil
	}
	out := new(Aws)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Aws) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAssociation) DeepCopyInto(out *AwsAssociation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAssociation.
func (in *AwsAssociation) DeepCopy() *AwsAssociation {
	if in == nil {
		return nil
	}
	out := new(AwsAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsRoute) DeepCopyInto(out *AwsRoute) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsRoute.
func (in *AwsRoute) DeepCopy() *AwsRoute {
	if in == nil {
		return nil
	}
	out := new(AwsRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsRouteTable) DeepCopyInto(out *AwsRouteTable) {
	*out = *in
	if in.Associations != nil {
		in, out := &in.Associations, &out.Associations
		*out = make([]AwsAssociation, len(*in))
		copy(*out, *in)
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make(map[string]AwsRoute, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsRouteTable.
func (in *AwsRouteTable) DeepCopy() *AwsRouteTable {
	if in == nil {
		return nil
	}
	out := new(AwsRouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsSubnet) DeepCopyInto(out *AwsSubnet) {
	*out = *in
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.RouteTables != nil {
		in, out := &in.RouteTables, &out.RouteTables
		*out = make(map[string]AwsRouteTable, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.NatGateways != nil {
		in, out := &in.NatGateways, &out.NatGateways
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TransitGateways != nil {
		in, out := &in.TransitGateways, &out.TransitGateways
		*out = make(map[string]TransitGateway, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.VpcPeeringConnections != nil {
		in, out := &in.VpcPeeringConnections, &out.VpcPeeringConnections
		*out = make(map[string]PeeringConnection, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsSubnet.
func (in *AwsSubnet) DeepCopy() *AwsSubnet {
	if in == nil {
		return nil
	}
	out := new(AwsSubnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsVpc) DeepCopyInto(out *AwsVpc) {
	*out = *in
	if in.AdditionalCidrBlocks != nil {
		in, out := &in.AdditionalCidrBlocks, &out.AdditionalCidrBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NatGateways != nil {
		in, out := &in.NatGateways, &out.NatGateways
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PrivateSubnets != nil {
		in, out := &in.PrivateSubnets, &out.PrivateSubnets
		*out = make([]StatusSubnets, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(StatusSubnets, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	if in.PublicSubnets != nil {
		in, out := &in.PublicSubnets, &out.PublicSubnets
		*out = make([]StatusSubnets, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(StatusSubnets, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	if in.PrivateRouteTables != nil {
		in, out := &in.PrivateRouteTables, &out.PrivateRouteTables
		*out = make([]StatusRouteTables, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(StatusRouteTables, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	if in.PublicRouteTables != nil {
		in, out := &in.PublicRouteTables, &out.PublicRouteTables
		*out = make([]StatusRouteTables, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(StatusRouteTables, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TransitGateways != nil {
		in, out := &in.TransitGateways, &out.TransitGateways
		*out = make(map[string]TransitGateway, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.VpcPeeringConnections != nil {
		in, out := &in.VpcPeeringConnections, &out.VpcPeeringConnections
		*out = make(map[string]PeeringConnection, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsVpc.
func (in *AwsVpc) DeepCopy() *AwsVpc {
	if in == nil {
		return nil
	}
	out := new(AwsVpc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringConnection) DeepCopyInto(out *PeeringConnection) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringConnection.
func (in *PeeringConnection) DeepCopy() *PeeringConnection {
	if in == nil {
		return nil
	}
	out := new(PeeringConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusRouteTableDetails) DeepCopyInto(out *StatusRouteTableDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusRouteTableDetails.
func (in *StatusRouteTableDetails) DeepCopy() *StatusRouteTableDetails {
	if in == nil {
		return nil
	}
	out := new(StatusRouteTableDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in StatusRouteTables) DeepCopyInto(out *StatusRouteTables) {
	{
		in := &in
		*out = make(StatusRouteTables, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusRouteTables.
func (in StatusRouteTables) DeepCopy() StatusRouteTables {
	if in == nil {
		return nil
	}
	out := new(StatusRouteTables)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusSubnetDetails) DeepCopyInto(out *StatusSubnetDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusSubnetDetails.
func (in *StatusSubnetDetails) DeepCopy() *StatusSubnetDetails {
	if in == nil {
		return nil
	}
	out := new(StatusSubnetDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in StatusSubnets) DeepCopyInto(out *StatusSubnets) {
	{
		in := &in
		*out = make(StatusSubnets, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusSubnets.
func (in StatusSubnets) DeepCopy() StatusSubnets {
	if in == nil {
		return nil
	}
	out := new(StatusSubnets)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGateway) DeepCopyInto(out *TransitGateway) {
	*out = *in
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make(map[string]TransitGatewayAttachment, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RouteTables != nil {
		in, out := &in.RouteTables, &out.RouteTables
		*out = make(map[string]TransitGatewayRouteTable, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGateway.
func (in *TransitGateway) DeepCopy() *TransitGateway {
	if in == nil {
		return nil
	}
	out := new(TransitGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayAttachment) DeepCopyInto(out *TransitGatewayAttachment) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayAttachment.
func (in *TransitGatewayAttachment) DeepCopy() *TransitGatewayAttachment {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTable) DeepCopyInto(out *TransitGatewayRouteTable) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTable.
func (in *TransitGatewayRouteTable) DeepCopy() *TransitGatewayRouteTable {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTable)
	in.DeepCopyInto(out)
	return out
}
